class MySketch extends React.Component {
 setup(p5, whereToPlot) {
   p5.createCanvas(900, 900).parent(whereToPlot)
   p5.angleMode (p5.DEGREES)
   p5.frameRate(3)

 }

 draw(p5) {
   p5.translate(p5.width / 2 - 100, p5.height / 2 + 200)
   p5.background(255)
    branch(100)
    
   DELTA = brain.current.bands.data.delta[0] * 10;
   THETA = brain.current.bands.data.theta[0]* 10;
   ALPHA = brain.current.bands.data.alpha[0]* 10;   
   BETA =  brain.current.bands.data.beta[0]* 10;
   GAMMA =  brain.current.bands.data.gamma[0]* 10;
   

 function branch(len) {
 p5.push()
   if (len > 10) {
    p5.strokeWeight(p5.map(len, 10, 100, 1, 15))
    p5.stroke(70, 40, 20)
    p5.line(0, 0, 0, -len)
    p5.translate(0, -len)
    p5.rotate(30)
    branch(len * p5.random(0.7, 0.9))
    p5.rotate(-60)
    branch(len * p5.random(0.7, 0.9))
  } 
  else {
    var r = p5.random(DELTA, THETA, ALPHA, BETA, GAMMA)* 5 + p5.random(-30, 30)
    var g = p5.random(DELTA, THETA, ALPHA, BETA, GAMMA)* 6 + p5.random (-30, 30)
    var b = p5.random(DELTA, THETA, ALPHA, BETA, GAMMA)* 3 + p5.random (-30, 30)
      p5.fill(r, g, b)
      p5.noStroke()
      p5.ellipse(0, 0, 10)
  }

  p5.pop()
    
}
 }

 render() {
   return (
      <Sketch
        setup={this.setup}
        draw={this.draw}
      />
   )
 }

}

render (
 <MySketch />
)

 
 
class MySketch extends React.Component {
 
 setup(p5, whereToPlot) {
   p5.createCanvas(600, 400).parent(whereToPlot)
   
   // bike body
   class Bike {
     constructor(x, y, r, g, b, speed){
       this.x = x;
       this.y = y;
       this.r = r;
       this.g = g;
       this.b = b;
       this.speed = speed;
     }
     
     display() {
       p5.noFill();
       p5.strokeWeight(4);
       // tires
       p5.stroke(0);
       p5.circle(this.x, this.y, 15);
       p5.circle(this.x+50, this.y, 15);
       // body
       p5.stroke(this.r, this.b, this.g);
       p5.quad(this.x, this.y, this.x+15, this.y-25, this.x+40, this.y-25, this.x+25, this.y);
       p5.line(this.x+50, this.y, this.x+40, this.y-40);
       p5.line(this.x+25, this.y, this.x+12, this.y-32);
       //seat & handlebars
       p5.stroke(158, 90, 60);
       p5.strokeWeight(6);
       p5.line(this.x+8, this.y-35, this.x+17, this.y-35);
       p5.line(this.x+40, this.y-40, this.x+41, this.y-36);
       p5.curve(this.x+10, this.y-50, this.x+40, this.y-40, this.x+50, this.y-30, this.x-30, this.y+20);
     }
     
     move() {
       this.x += this.speed;
       if (this.x > WIDTH) {
         this.x = 0;
       }
     }
   }
   
   bikes = [];
   
   // variables
   XPOS = 0;
   YPOS = 60;
   WIDTH = p5.width
   HEIGHT = p5.height
   DELTA = brain.current.bands.data.delta[0];
   THETA = brain.current.bands.data.theta[1];
   ALPHA = brain.current.bands.data.alpha[2];   
   BETA =  brain.current.bands.data.beta[3];
   GAMMA = brain.current.bands.data.gamma[0];
   EEG = [DELTA, THETA, ALPHA, BETA, GAMMA]
   EEGNAMES = ['DELTA TEMPORTAL LEFT', 'THETA FRONTOPOLAR LEFT', 'ALPHA FRONTOPOLAR RIGHT', 'BETA TEMPORAL RIGHT', 'GAMMA TEMPORAL LEFT']
   
   // creating the bikes
   for (let i = 0; i < EEG.length; i++) {
     bikes.push(new Bike(XPOS, YPOS+i*80, EEG[i]*90, p5.random(255), p5.random(200), EEG[i]*5));
   }
 }
  
  
 draw(p5) {
  p5.background(150);
  
  // draw instructions
  p5.noStroke();
  p5.fill(227, 202, 235);
  p5.textStyle(p5.BOLD);
  p5.text('Hold down the mouse to watch the race!', WIDTH/3.5, 15);
  
  // draw the finish line
  p5.strokeWeight(10);
  p5.stroke(255);
  p5.line(WIDTH-100, 0, WIDTH-100, HEIGHT);
  p5.noStroke();
  colourblock = 0;
  colourblock2 = 255;
  squaresize = 20;
  for (let i = 0; i < HEIGHT/20; i++) {
    if (colourblock == 255) {
      p5.fill(colourblock);
      p5.square(WIDTH-90, i*squaresize, squaresize);
      colourblock = 0
    } else {
      p5.fill(colourblock);
      p5.square(WIDTH-90, i*squaresize, squaresize);
      colourblock = 255
    }
  }
  for (let i = 0; i < HEIGHT/20; i++) {
    if (colourblock2 == 255) {
      p5.fill(colourblock2);
      p5.square(WIDTH-70, i*squaresize, squaresize);
      colourblock2 = 0
    } else {
      p5.fill(colourblock2);
      p5.square(WIDTH-70, i*squaresize, squaresize);
      colourblock2 = 255
    }
  }
  
  // draw the bike names
  for (let i = 0; i < EEGNAMES.length; i++) {
    p5.fill(232, 250, 237, 100);
    p5.textStyle(p5.ITALIC);
    p5.text(EEGNAMES[i], XPOS, YPOS+i*80)
   }
 
  // start the race
  if (p5.mouseIsPressed === true) {
    for (let i = 0; i < bikes.length; i++) {
      bikes[i].display();
      bikes[i].move(); 
    }
  }
}
 

 render() {
   return (
      <Sketch
        setup={this.setup}
        draw={this.draw}
      />
   )
 }
}

render (
 <MySketch />
)                                                                                                                                                                
// BasicFrequencyBands.p5 - Ky Mathewson
// Demonstration of text and animation with frequency bands
let lineY = [];
class MySketch extends React.Component {
 setup(p5, whereToPlot) {
   p5.createCanvas(300, 300).parent(whereToPlot)
   for (let i = 0; i < 100; i++) {
    lineY[i] = p5.random(p5.height);
  }
 }

 draw(p5) {
   let alpha = brain.current.bands.data.alpha[0]
   let alpha2 = brain.current.bands.data.alpha[2]
   let alpha3 = brain.current.bands.data.alpha[3]
   let theta = brain.current.bands.data.theta[3]
   p5.background(32,42,68);
   
   //hills
    p5.fill(118, 136, 106)
  grassHill = p5.circle(90, 330, 200)
  grassHill2 = p5.circle(220, 370, 200)

    //draw house
    p5.noStroke()
  drawHouse(230, 195, 100, 100, [84,7,7], [0,0,0], [alpha*100,alpha2*100,alpha3*100], [214,183,152]);
  
  //rain
  for (let i = 0; i < lineY.length; i++) {
    let lineX = p5.width * i / lineY.length;
    p5.stroke(187,205,212);
    p5.strokeWeight(2)
    p5.line(lineX, lineY[i], lineX, lineY[i]+4);
    
    lineY[i]+=p5.random(theta);
    
    if (lineY[i] > p5.height) {
      lineY[i] = 0;
    }
}

function drawHouse(squareX, squareY, wide, high, color1, color2, color3, color4) {
  let houseDistance = wide / 2;


  // main square of house
  p5.fill(color1);
  p5.rect(squareX - houseDistance, squareY - houseDistance, wide, high);

  // roof
  p5.fill(color2);
  p5.triangle(squareX-wide/2, squareY-high/2, squareX, squareY-high, squareX+houseDistance, squareY-high/2)

  // chimney
  p5.fill(color1);
  p5.rect(squareX+high/10, squareY-high, houseDistance/3, high/3)
  
  // windows
  p5.fill(color3);
  p5.rect(squareX+high/10, squareY-high/3, houseDistance/2, high/4)
  p5.rect(squareX-high/3, squareY-high/3, houseDistance/2, high/4)
  
  // door
  p5.fill(color4);
  p5.rect(squareX-high/9, squareY+high/6, houseDistance/2, high/3)
  
 // doorknob
  p5.fill(color1);
  p5.circle(squareX+high/10, squareY+high/3, wide/25)
  
  }
       
 }


 render() {
   return (
      <Sketch
        setup={this.setup}
        draw={this.draw}
      />
   )
 }

}

render (
 <MySketch />
)

         
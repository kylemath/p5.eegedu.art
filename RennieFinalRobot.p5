// By Victoria Rennie
// Press the mouse to change the background colour, based on your alpha and theta power
// Pressing the mouse also makes the robot smile! 
// The robot's pupils also follow the mouse. 


class MySketch extends React.Component {
 setup(p5, whereToPlot) {
   p5.createCanvas(400, 400).parent(whereToPlot)
   p5.frameRate(10);
 }

 draw(p5) {
 
//background
   let alpha = brain.current.bands.data.alpha[1]*50;
   console.log(brain.current.bands.data.alpha[1]);
   
   let theta = brain.current.bands.data.theta[3]*50;
   console.log(brain.current.bands.data.theta[3]);
           
   if (p5.mouseIsPressed) {
       p5.background(alpha, theta, 100);
   }
    else{
       p5.background(128, 128, 128);
   }
  
// face
  p5.strokeWeight(10);
  p5.fill(112, 212, 255)
  p5.square(p5.width*0.1, p5.height*0.1, p5.width*0.8);

// inner eyes
  p5.fill(247, 201, 74)
  p5.circle(p5.width*0.35, p5.height*0.375, p5.height*0.16)
  p5.circle(p5.width*0.65, p5.height*0.375, p5.height*0.16)

// pupils  
  p5.fill(0, 0, 0)
  p5.circle(p5.width*0.35 +((p5.mouseX-50)/(50/2)), 
            p5.height*0.375 +((p5.mouseY-50)/(50/2)), 
            p5.height*0.025)
  
  p5.circle(p5.width*0.65 +((p5.mouseX-50)/(50/2)), 
            p5.height*0.375 +((p5.mouseY-50)/(50/2)), 
            p5.height*0.025)
         
// smile
  p5.noFill()

  if (p5.mouseIsPressed) {
      startAng = 0.1 * p5.PI
      endAng = 0.9 * p5.PI
      smileDiam = p5.width * 0.15
      p5.arc(p5.width/2, p5.height * 0.65, smileDiam, smileDiam, startAng,
             endAng)   
    } 
    else {
      let startAng = p5.PI
      let endAng = 2 * p5.PI
      let smileDiam = p5.width * 0.15
      p5.arc(p5.width/2, p5.height * 0.7, smileDiam, smileDiam, startAng,       
            endAng)
    }
   
// ears 
  p5.fill(247, 201, 74)
  p5.rect(p5.width*0.05, p5.height*0.3, p5.width*0.05, p5.height/3)
  p5.rect(p5.width*0.9, p5.height*0.3, p5.width*0.05, p5.height/3)
  
//antennae
  p5.strokeWeight(5)
  p5.line(p5.width/2, p5.height*0.1, p5.width*0.45, p5.height*0.05)
  p5.line(p5.width/2, p5.height*0.1, p5.width*0.55, p5.height*0.05)
  
  p5.circle(p5.width*0.45, p5.height*0.05, 10)
  p5.circle(p5.width*0.55, p5.height*0.05, 10) 
}

 render() {
   return (
      <Sketch
        setup={this.setup}
        draw={this.draw}
      />
   )
 }

}

render (
 <MySketch />
)                                                                

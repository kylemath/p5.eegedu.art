//I like how the circles change with ocular/muscle artifacts

class MySketch extends React.Component {
  setup(p5, whereToPlot) {
  p5.createCanvas(500, 500).parent(whereToPlot)
  p5.frameRate(10);
  p5.ellipseMode(p5.RADIUS);
  
  let alpha = [];
  let delta = [];
  let gamma = [];
  let beta = [];
  
 } //setup end

draw(p5) {
  
  HEIGHT = p5.height;
  WIDTH = p5.width;

  DELTA = brain.current.bands.data.delta[0]*10;
  THETA = brain.current.bands.data.theta[0]*10;
  ALPHA = brain.current.bands.data.alpha[0]*10;   
  BETA =  brain.current.bands.data.beta[0]*10;
  GAMMA =  brain.current.bands.data.gamma[0]*10;

  //bubble class
  class bubble {
    constructor(bubbleX,bubbleY,speedx,speedy,text) {
      this.x = bubbleX;
      this.y = bubbleY;
      this.spx = speedx;
      this.spy = speedy;
      this.text = text;
    } // constructor end
    
    move() {
      this.x = this.x + this.spx;
      this.y = this.y + this.spy;
      
    } //move end
    
    display() {
      p5.circle(this.x,this.y,p5.random(50,100));
      p5.push();
      p5.stroke(0);
      p5.textSize(50);
      p5.text(this.text,this.x,this.y);
      p5.pop();
    } //display end
    
  } //class end
  
//bubbles that represent alpha, delta, theta, beta, gamma;
//x-/y-speed determined by wave power
 let alphabub = new bubble (WIDTH/2 + ALPHA, HEIGHT/2 + ALPHA, ALPHA, ALPHA, 'ALPHA');
 let deltabub = new bubble (WIDTH/2 + DELTA, HEIGHT/2 + DELTA, DELTA, DELTA, 'DELTA');
 let thetabub = new bubble (WIDTH/2 + THETA, HEIGHT/2 + THETA, THETA, THETA, 'THETA');
 let betabub = new bubble (WIDTH/2 + BETA, HEIGHT/2 + BETA, BETA, BETA, 'BETA');
 let gammabub = new bubble (WIDTH/2 + GAMMA, HEIGHT/2 + GAMMA, GAMMA, GAMMA, 'GAMMA');
      
   p5.background(150);
   p5.noStroke();
   p5.textAlign(p5.RIGHT, p5.BOTTOM);
   
   //green
   p5.fill(204,219,200,125);
   alphabub.move();
   alphabub.display(); 
   
   //pink
   p5.fill(234,189,189,125);
   deltabub.move();
   deltabub.display();

   //purp
   p5.fill(169,173,207,150);
   gammabub.move();
   gammabub.display();
   
   //yellow
   p5.fill(255,229,153,125);
   thetabub.move();
   thetabub.display();

   //blue
   p5.fill(207,226,243,125); 
   betabub.move();
   betabub.display();
   
} //draw end
  
 render() {
   return (
      <Sketch
        setup={this.setup}
        draw={this.draw}
      />
    )
 }// render end
}//MySketch end

render (
 <MySketch />
)
          